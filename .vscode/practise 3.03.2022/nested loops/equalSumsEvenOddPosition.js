
/*В задачата са дадени 2 числа, като едното е по- малко от другото
Първо ги обхождаме, като превръщаме всяко едно от тях в Стринг
След това ги обхождаме по индекс от дължината на Стринг
След това превръщаме Стринговите в числа, като ги раздробяваме по индекси
След това извършваме проверка за четност на всеки един от индексите на едно число
След това правим проверка, ако сумата от стойността на четните индекси е равна на сумата от стойността на нечетните индекси,
Отпечатай Стринговия ред, подобно на конкатенация с разделител спейс между всеки стринг от стринговия ред 
ТАКА НАМИРАМЕ ВСИЧКИ ЧИСЛА В ДИАПАЗОНА НА ОБХОД НА ВЪНШНИЯ ЦИКЪЛ, ЧИЙТО ИНДЕКСИ ИМАТ РАВНА СТОЙНОСТ НА СБОРА НА НЕЧЕТНИТЕ ИНДЕКСИ И СБОРА НА ЧЕТНИТЕ*/


function operation(input){

let start = Number(input[0]);
let end = Number(input[1]);
let printLine = ''; // Празен стринг
for(let index = start; index <= end; index++){ //  цикли числата от 100000 до 100050
let currNum = '' + index; // превръща числата във Стринг
let oddSum = 0; // сума от нечетните числа
let evenSum = 0; // сума от четните числа
for(let j = 0; j <= currNum.length; j++){ // цикли по продължителността на конкретния Стринг от число, подадено от първия цикъл for
    let currDigit = Number(currNum.charAt(j)); // Преобразуваме буквите от числения стринг в числа за да можем да извършим числени проверки за четност
  if(j % 2 === 0){ //Ако е четно
      evenSum += currDigit;  //Прибави числото от стринга към сбора на четните
  }
  else{
  oddSum += currDigit; // Прибави числото от стринга към сбора на нечетните
  }
}
if(oddSum === evenSum) { // Ако сбора на нечетните е равен на четните
    printLine += `${index} `; //Прибави числото подадено от първия цикъл for към Стринговия ред и остави разстояние между всяко едно.
}


}
console.log(printLine); //Отпечатай Стринговия ред 


}
operation(["100000",
"100050"])
