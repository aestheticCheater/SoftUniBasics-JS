/*Имаме масив от числа въведени от потребителя, Декларираме индекс и създаваме две променливи за сума от простите числа и сума от сложните числа
  Създаваме while цикъл, защото имаме команда стоп, условието е да се върти докато не се въведе стринг от импут равен на стоп
  Вътре в цикъла ще извършваме проверки, но за целта трябва да работим с числени данни, затова преобразуваме Стринг от импут в числен тип
  и по условие не можем да работим с отрицателни числа, затова правим проверка дали въведеното число е по- малко от 0. Ако числото е отрицателно,
  излизаме от цикъла и печатаме Number is negative. В противен случай в else декларираме булев флаг за проверка isPrime и слагаме true.
  Създаваме втори цикъл, който ще служи за проверка за тип на въведените числа. Създаваме for цикъл с начало 2 защото за проверката е нужно 
  да разделим числата модулно на 2 за да разберем дали имат остатък, Ако имат значи са прости,в противен случай - сложни. и поставяме флага на false; 
  Излизаме от проверката за четност и прибавяме числата в отделни променливи, като съберем сбора им. 
    */

function primeNum(input){
let index = 0;
let primeSum = 0;
let nonPrimeSum = 0;

while(input[index] !== "stop"){
let curNum = Number(input[index]);
if (curNum < 0){
    console.log('Number is negative.');
}
else{
    let isPrime = true;
    for(let i = 2; i < curNum; i++) {
     if(curNum % i == 0){
         isPrime = false; 
         break;
     }
    }
    if(isPrime) {
        primeSum += curNum;

    }
    else{
        nonPrimeSum += curNum;
    }
}
index++;

}
console.log(`Sum of all prime numbers is: ${primeSum}`);
console.log(`Sum of all non prime numbers is: ${nonPrimeSum}`);
}
primeNum(["3",
"9",
"0",
"7",
"19",
"4",
"stop"])
